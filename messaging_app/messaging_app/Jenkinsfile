pipeline {
    agent any

    environment {

        GITHUB_CREDENTIALS = credentials(PAT)
        PYTHON_ENV = 'venv'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository'
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']], //or the master branch
                    userRemoteConfigs: [[
                        url: 'https://github.com/Bashu-011/alx-backend-python.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
                sh 'git branch main'
            }
        }

        stage('Set up python environment') {
            steps {
                echo 'Setting up python venv'
                sh '''
                python3 -m venv venv
                . venv/bin/activate
                pip3 install --upgrade pip
                pip3 install -r messaging_app/requirements.txt
                '''
            }
        }
        
        //run the available tests
        stage('Run Tests') {
            steps {
                echo 'Running pytest'
                sh '''
                . venv/bin/activate
                pytest messaging_app/tests/ --junitxml=reports/test-results.xml
                '''
            }
            //log the results in a file
            post {
                always {
                    junit 'reports/test-results.xml'
                }
            }
        }
    }

    stage('Build Docker Image') {
            steps {
                echo 'Building the docker image'
                sh '''
                cd messaging_app
                docker build
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing image to Docker Hub...'
                sh '''
                echo $DOCKER_CREDENTIALS_PSW | docker login -u $DOCKER_CREDENTIALS_USR --password-stdin
                docker push $DOCKERHUB_REPO:$IMAGE_TAG
                docker logout
                '''
            }
        }
    

    post {
        success {
            echo 'Tests passed successfully'
        }
        failure {
            echo 'Tests failed'
        }
    }
}
